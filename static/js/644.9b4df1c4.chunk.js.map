{"version":3,"file":"static/js/644.9b4df1c4.chunk.js","mappings":"6SACMA,EAAM,mCAECC,EAAmB,mCAAG,2FAC3BC,EAAWC,EAAAA,EAAAA,IAAU,gDAAiD,CAC1EC,OAAQ,CACNC,QAASL,KAHoB,kBAM1BE,GAN0B,2CAAH,qDASnBI,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,GACtC,CACEH,OAAQ,CACNC,QAASL,KALgB,cACzBE,EADyB,yBASxBA,GATwB,2CAAH,sDAWjBM,EAAc,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,YAErB,CACEH,OAAQ,CACNC,QAASL,KALa,cACtBE,EADsB,yBASrBA,GATqB,2CAAH,sDAYdO,EAAiB,mCAAG,WAAMF,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,YAErB,CACEH,OAAQ,CACNC,QAASL,EACTU,KAAM,KANmB,cACzBR,EADyB,yBAUxBA,EAASS,MAVe,2CAAH,sDAajBC,EAAa,mCAAG,WAAMC,GAAN,uFACJV,EAAAA,EAAAA,IAAA,4CAErB,CACEC,OAAQ,CACNU,SAAU,QACVT,QAASL,EACTU,KAAM,EACNG,MAAAA,KARqB,cACrBX,EADqB,yBAYpBA,EAASS,MAZW,2CAAH,qD,oHCtC1B,EAVwB,SAAC,GAAyB,IAAvBI,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAEjC,OADAC,QAAQC,IAAI,UAAWF,IAErB,2BACE,oCAAYD,MACZ,6BAAKC,OAGV,ECOD,EAboB,SAAC,GAAsB,IAAD,IAAnBG,QAAAA,OAAmB,MAAT,GAAS,EACxC,OACE,wBACGA,EAAQC,OAAS,EACdD,EAAQE,KAAI,YAA8B,IAA3BN,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASM,EAAS,EAATA,GAC9B,OACE,SAAC,EAAD,CAA0BP,OAAQA,EAAQC,QAASA,GAA7BM,EAEzB,IACD,4CAGT,ECSD,EAjBgB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACThB,GAAYiB,EAAAA,EAAAA,MAAZjB,QACR,GAA8BkB,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBO,EAAhB,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACRJ,GAAa,IACbd,EAAAA,EAAAA,IAAkBF,GACfqB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPH,EAAWG,EACZ,IACAC,OAAM,SAAAC,GAAK,OAAId,QAAQC,IAAIa,EAAhB,IACXC,SAAQ,WACPT,GAAa,EACd,GACJ,GAAE,CAAChB,EAASgB,KAEN,SAAC,EAAD,CAAaJ,QAASA,GAC9B,C","sources":["Api/fetchApi.js","components/ReviewsList/ReviewsListItem/ReviewsListItem.jsx","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = 'b36a691b07ce9c3557881351abfd0b29';\n\nexport const fetchTrendingMovies = async () => {\n  const response = axios.get('https://api.themoviedb.org/3/trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response;\n};\nexport const fetchMovieСast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    {\n      params: {\n        api_key: KEY,\n        page: 1,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const OnSearchMovie = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        language: 'en-US',\n        api_key: KEY,\n        page: 1,\n        query,\n      },\n    }\n  );\n  return response.data;\n};\n","const ReviewsListItem = ({ author, content }) => {\n  console.log('content', content);\n  return (\n    <li>\n      <p>Author: {author}</p>\n      <p> {content}</p>\n    </li>\n  );\n};\n\nexport default ReviewsListItem;\n","import ReviewsListItem from './ReviewsListItem';\n\nconst ReviewsList = ({ reviews = [] }) => {\n  return (\n    <ul>\n      {reviews.length > 0\n        ? reviews.map(({ author, content, id }) => {\n            return (\n              <ReviewsListItem key={id} author={author} content={content} />\n            );\n          })\n        : \"We don't have any revievs for this movie\"}\n    </ul>\n  );\n};\nexport default ReviewsList;\n\n// We don't have any revievs for this movie\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'Api/fetchApi';\nimport ReviewsList from 'components/ReviewsList';\n\nconst Reviews = ({ setIsLoading }) => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieReviews(movieId)\n      .then(({ results }) => {\n        setReviews(results);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId, setIsLoading]);\n\n  return <ReviewsList reviews={reviews} />;\n};\nexport default Reviews;\n"],"names":["KEY","fetchTrendingMovies","response","axios","params","api_key","fetchMovieDetails","movieId","fetchMovieСast","fetchMovieReviews","page","data","OnSearchMovie","query","language","author","content","console","log","reviews","length","map","id","setIsLoading","useParams","useState","setReviews","useEffect","then","results","catch","error","finally"],"sourceRoot":""}