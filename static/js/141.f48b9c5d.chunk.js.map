{"version":3,"file":"static/js/141.f48b9c5d.chunk.js","mappings":"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","sources":["Api/fetchApi.js","components/GalleryMovies/GalleryMoviesItem/GalleryMoviesItem.styled.jsx","components/GalleryMovies/GalleryMoviesItem/GalleryMoviesItem.jsx","components/GalleryMovies/GalleryMovies.styled.jsx","components/GalleryMovies/GalleryMovies.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = 'b36a691b07ce9c3557881351abfd0b29';\n\nexport const fetchTrendingMovies = async () => {\n  const response = axios.get('https://api.themoviedb.org/3/trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response;\n};\nexport const fetchMovieСast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    {\n      params: {\n        api_key: KEY,\n        page: 1,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const OnSearchMovie = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        language: 'en-US',\n        api_key: KEY,\n        page: 1,\n        query,\n      },\n    }\n  );\n  return response.data;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLinkItem = styled(NavLink)`\n  & img {\n    width: 350px;\n  }\n  & p {\n    margin: 0;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { NavLinkItem } from './GalleryMoviesItem.styled';\nconst GalleryMoviesItem = ({ trendingMoviesUrl, trendingMoviesID, title }) => {\n  const baseUrl = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n  return (\n    <NavLinkItem to={`/movies/${trendingMoviesID}`} state={{ from: location }}>\n      <img src={baseUrl + trendingMoviesUrl} alt=\"\" />\n      <p>{title}</p>\n    </NavLinkItem>\n  );\n};\n\nexport default GalleryMoviesItem;\n","import styled from 'styled-components';\n\nexport const GalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 20px;\n  row-gap: 10px;\n`;\nexport const TrendingMoviesTitle = styled.h1`\n  display: flex;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  justify-content: center;\n`;\n","import GalleryMoviesItem from './GalleryMoviesItem';\nimport { GalleryList, TrendingMoviesTitle } from './GalleryMovies.styled';\n\nconst GalleryMovies = ({ movies, trendingMovies = null }) => {\n  return (\n    <>\n      {trendingMovies && (\n        <TrendingMoviesTitle>{trendingMovies}</TrendingMoviesTitle>\n      )}\n      <GalleryList>\n        {movies.map(({ poster_path, id, title }) => {\n          return (\n            title && (\n              <li key={id}>\n                <GalleryMoviesItem\n                  trendingMoviesUrl={poster_path}\n                  trendingMoviesID={id}\n                  title={title}\n                />\n              </li>\n            )\n          );\n        })}\n      </GalleryList>\n    </>\n  );\n};\n\nexport default GalleryMovies;\nGalleryMovies.defaultProps = {\n  movies: [],\n};\n","import { Form, Field } from 'formik';\nimport styled from 'styled-components';\nexport const FormMovies = styled(Form)`\n  display: flex;\n  width: 500px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 5px;\n`;\nexport const FieldMovies = styled(Field)`\n  display: flex;\n  width: 100%;\n`;\nexport const SearchButton = styled.button`\n  margin-left: 5px;\n`;\n","import { Formik } from 'formik';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { OnSearchMovie } from 'Api/fetchApi';\nimport { FormMovies, FieldMovies, SearchButton } from './Movies.styled';\nimport GalleryMovies from 'components/GalleryMovies';\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [fetchedMovies, setFetchedMovies] = useState([]);\n  const handleSabmit = ({ searchMovies }, { resetForm }) => {\n    setQuery(searchMovies.trim());\n    console.log(query);\n    resetForm();\n  };\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    OnSearchMovie(query).then(({ results }) => {\n      setFetchedMovies(results);\n    });\n  }, [query]);\n  return (\n    <main>\n      <Formik initialValues={{ searchMovies: '' }} onSubmit={handleSabmit}>\n        <FormMovies>\n          <FieldMovies\n            type=\"text\"\n            name=\"searchMovies\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search Movies\"\n          />\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </FormMovies>\n      </Formik>\n      <GalleryMovies movies={fetchedMovies} />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","fetchTrendingMovies","response","axios","params","api_key","fetchMovieDetails","movieId","fetchMovieСast","fetchMovieReviews","page","data","OnSearchMovie","query","language","NavLinkItem","styled","NavLink","trendingMoviesUrl","trendingMoviesID","title","location","useLocation","to","state","from","src","alt","GalleryList","TrendingMoviesTitle","p","theme","space","GalleryMovies","movies","trendingMovies","map","poster_path","id","defaultProps","FormMovies","Form","FieldMovies","Field","SearchButton","useState","setQuery","fetchedMovies","setFetchedMovies","useEffect","then","results","initialValues","searchMovies","onSubmit","resetForm","trim","console","log","type","name","autoComplete","autoFocus","placeholder"],"sourceRoot":""}