{"version":3,"file":"static/js/859.b4858ce2.chunk.js","mappings":"6SACMA,EAAM,mCAECC,EAAmB,mCAAG,2FAC3BC,EAAWC,EAAAA,EAAAA,IAAU,gDAAiD,CAC1EC,OAAQ,CACNC,QAASL,KAHoB,kBAM1BE,GAN0B,2CAAH,qDASnBI,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,GACtC,CACEH,OAAQ,CACNC,QAASL,KALgB,cACzBE,EADyB,yBASxBA,GATwB,2CAAH,sDAWjBM,EAAc,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,YAErB,CACEH,OAAQ,CACNC,QAASL,KALa,cACtBE,EADsB,yBASrBA,GATqB,2CAAH,sDAYdO,EAAiB,mCAAG,WAAMF,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,YAErB,CACEH,OAAQ,CACNC,QAASL,EACTU,KAAM,KANmB,cACzBR,EADyB,yBAUxBA,EAASS,MAVe,2CAAH,sDAajBC,EAAa,mCAAG,WAAMC,GAAN,uFACJV,EAAAA,EAAAA,IAAA,4CAErB,CACEC,OAAQ,CACNU,SAAU,QACVT,QAASL,EACTU,KAAM,EACNG,MAAAA,KARqB,cACrBX,EADqB,yBAYpBA,EAASS,MAZW,2CAAH,qD,mGC7CbI,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6G,SCkBxB,EAnB0B,SAAC,GAAoD,IAGlDE,EAAUC,EAHVC,EAAiD,EAAjDA,kBAAmBC,EAA8B,EAA9BA,iBAAkBC,EAAY,EAAZA,MAE1DC,GAAWC,EAAAA,EAAAA,MASjB,OACE,UAACT,EAAD,CAAaU,GAAE,kBAAaJ,GAAoBK,MAAO,CAAEC,KAAMJ,GAA/D,WACE,gBAAKK,KAVkBV,EAFX,kCAEqBC,EAUIC,EATlCD,EAKED,EAAWC,EAHT,6HAOkDU,IAAI,MAC7D,uBAAIP,MAGT,ECjBYQ,EAAcd,EAAAA,GAAAA,GAAH,qGAMXe,EAAsBf,EAAAA,GAAAA,GAAH,+FAEb,SAAAgB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,ICPdC,EAAgB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAoC,IAA5BC,eAAAA,OAA4B,MAAX,KAAW,EAC3D,OACE,gCACGA,IACC,SAACN,EAAD,UAAsBM,IAEvBD,EAAOE,OAAS,IACf,SAACR,EAAD,UACGM,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,GAAInB,EAAY,EAAZA,MAC9B,OACEA,IACE,yBACE,SAAC,EAAD,CACEF,kBAAmBoB,EACnBnB,iBAAkBoB,EAClBnB,MAAOA,KAJFmB,EASd,QAKV,EAED,IACAN,EAAcO,aAAe,CAC3BN,OAAQ,G,mHCbV,EAhBiB,WACf,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAeQ,EAAf,KAQA,OAPAC,EAAAA,EAAAA,YAAU,YACR5C,EAAAA,EAAAA,MACG6C,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBpC,KAAQoC,QACfH,EAAUG,EACX,IACAC,SAAQ,WAAQ,GACpB,GAAE,KAED,6BACE,SAACb,EAAA,EAAD,CAAeC,OAAQA,EAAQC,eAAgB,oBAAsB,MAG1E,C","sources":["Api/fetchApi.js","components/GalleryMovies/GalleryMoviesItem/GalleryMoviesItem.styled.jsx","components/GalleryMovies/GalleryMoviesItem/GalleryMoviesItem.jsx","components/GalleryMovies/GalleryMovies.styled.jsx","components/GalleryMovies/GalleryMovies.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = 'b36a691b07ce9c3557881351abfd0b29';\n\nexport const fetchTrendingMovies = async () => {\n  const response = axios.get('https://api.themoviedb.org/3/trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response;\n};\nexport const fetchMovieСast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    {\n      params: {\n        api_key: KEY,\n        page: 1,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const OnSearchMovie = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        language: 'en-US',\n        api_key: KEY,\n        page: 1,\n        query,\n      },\n    }\n  );\n  return response.data;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLinkItem = styled(NavLink)`\n  & img {\n    width: 350px;\n    height: 525px;\n  }\n  & p {\n    margin: 0;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { NavLinkItem } from './GalleryMoviesItem.styled';\nconst GalleryMoviesItem = ({ trendingMoviesUrl, trendingMoviesID, title }) => {\n  const baseUrl = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n  const CaptchaPosterPath = (base_url, url_patch) => {\n    if (!url_patch) {\n      // болванка\n      return 'https://www.themoviedb.org/assets/2/apple-touch-icon-cfba7699efe7a742de25c28e08c38525f19381d31087c69e89d6bcb8e3c0ddfa.png';\n    }\n    // Url картинки для карточки\n    return base_url + url_patch;\n  };\n  return (\n    <NavLinkItem to={`/movies/${trendingMoviesID}`} state={{ from: location }}>\n      <img src={CaptchaPosterPath(baseUrl, trendingMoviesUrl)} alt=\"\" />\n      <p>{title}</p>\n    </NavLinkItem>\n  );\n};\n\nexport default GalleryMoviesItem;\n","import styled from 'styled-components';\n\nexport const GalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 20px;\n  row-gap: 10px;\n`;\nexport const TrendingMoviesTitle = styled.h1`\n  display: flex;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  justify-content: center;\n`;\n","import GalleryMoviesItem from './GalleryMoviesItem';\nimport { GalleryList, TrendingMoviesTitle } from './GalleryMovies.styled';\n\nconst GalleryMovies = ({ movies, trendingMovies = null }) => {\n  return (\n    <>\n      {trendingMovies && (\n        <TrendingMoviesTitle>{trendingMovies}</TrendingMoviesTitle>\n      )}\n      {movies.length > 0 && (\n        <GalleryList>\n          {movies.map(({ poster_path, id, title }) => {\n            return (\n              title && (\n                <li key={id}>\n                  <GalleryMoviesItem\n                    trendingMoviesUrl={poster_path}\n                    trendingMoviesID={id}\n                    title={title}\n                  />\n                </li>\n              )\n            );\n          })}\n        </GalleryList>\n      )}\n    </>\n  );\n};\n\nexport default GalleryMovies;\nGalleryMovies.defaultProps = {\n  movies: [],\n};\n","import GalleryMovies from 'components/GalleryMovies';\nimport { fetchTrendingMovies } from 'Api/fetchApi';\nimport { useState, useEffect } from 'react';\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchTrendingMovies()\n      .then(({ data: { results } }) => {\n        setMovies(results);\n      })\n      .finally(() => {});\n  }, []);\n  return (\n    <main>\n      <GalleryMovies movies={movies} trendingMovies={'Trending Movies'} />{' '}\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":["KEY","fetchTrendingMovies","response","axios","params","api_key","fetchMovieDetails","movieId","fetchMovieСast","fetchMovieReviews","page","data","OnSearchMovie","query","language","NavLinkItem","styled","NavLink","base_url","url_patch","trendingMoviesUrl","trendingMoviesID","title","location","useLocation","to","state","from","src","alt","GalleryList","TrendingMoviesTitle","p","theme","space","GalleryMovies","movies","trendingMovies","length","map","poster_path","id","defaultProps","useState","setMovies","useEffect","then","results","finally"],"sourceRoot":""}