{"version":3,"file":"static/js/141.ec985455.chunk.js","mappings":"6SACMA,EAAM,mCAECC,EAAmB,mCAAG,2FAC3BC,EAAWC,EAAAA,EAAAA,IAAU,gDAAiD,CAC1EC,OAAQ,CACNC,QAASL,KAHoB,kBAM1BE,GAN0B,2CAAH,qDASnBI,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,GACtC,CACEH,OAAQ,CACNC,QAASL,KALgB,cACzBE,EADyB,yBASxBA,GATwB,2CAAH,sDAWjBM,EAAc,mCAAG,WAAMD,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,YAErB,CACEH,OAAQ,CACNC,QAASL,KALa,cACtBE,EADsB,yBASrBA,GATqB,2CAAH,sDAYdO,EAAiB,mCAAG,WAAMF,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,YAErB,CACEH,OAAQ,CACNC,QAASL,EACTU,KAAM,KANmB,cACzBR,EADyB,yBAUxBA,EAASS,MAVe,2CAAH,sDAajBC,EAAa,mCAAG,WAAMC,GAAN,uFACJV,EAAAA,EAAAA,IAAA,4CAErB,CACEC,OAAQ,CACNU,SAAU,QACVT,QAASL,EACTU,KAAM,EACNG,MAAAA,KARqB,cACrBX,EADqB,yBAYpBA,EAASS,MAZW,2CAAH,qD,mGC7CbI,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yF,SCUxB,EAX0B,SAAC,GAAoD,IAAlDE,EAAiD,EAAjDA,kBAAmBC,EAA8B,EAA9BA,iBAAkBC,EAAY,EAAZA,MAE1DC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACP,EAAD,CAAaQ,GAAE,kBAAaJ,GAAoBK,MAAO,CAAEC,KAAMJ,GAA/D,WACE,gBAAKK,IAJO,kCAIQR,EAAmBS,IAAI,MAC3C,uBAAIP,MAGT,ECTYQ,EAAcZ,EAAAA,GAAAA,GAAH,qGAMXa,EAAsBb,EAAAA,GAAAA,GAAH,+FAEb,SAAAc,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,ICPdC,EAAgB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAoC,IAA5BC,eAAAA,OAA4B,MAAX,KAAW,EAC3D,OACE,gCACGA,IACC,SAACN,EAAD,UAAsBM,IAEvBD,EAAOE,OAAS,IACf,SAACR,EAAD,UACGM,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,GAAInB,EAAY,EAAZA,MAC9B,OACEA,IACE,yBACE,SAAC,EAAD,CACEF,kBAAmBoB,EACnBnB,iBAAkBoB,EAClBnB,MAAOA,KAJFmB,EASd,QAKV,EAED,IACAN,EAAcO,aAAe,CAC3BN,OAAQ,G,4IC9BGO,GAAazB,EAAAA,EAAAA,IAAO0B,EAAAA,GAAP1B,CAAH,+HAOV2B,GAAc3B,EAAAA,EAAAA,IAAO4B,EAAAA,GAAP5B,CAAH,0DAIX6B,EAAe7B,EAAAA,GAAAA,OAAH,6C,iBC+BzB,EArCe,WAAO,IAAD,EACnB,GAAwC8B,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAAW,UAAGL,EAAaM,IAAI,gBAApB,QAAgC,GAejD,OATAC,EAAAA,EAAAA,YAAU,WACY,KAAhBF,IAGJxC,EAAAA,EAAAA,GAAcwC,GAAaG,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACjCL,EAAiBK,EAClB,GACF,GAAE,CAACJ,KAGF,6BACE,SAAC,KAAD,CAAQK,cAAe,CAAEC,aAAc,IAAMC,SAhB5B,SAAC,EAAD,GAAsC,IAAnCD,EAAkC,EAAlCA,aAAkBE,EAAgB,EAAhBA,UACxCF,EAAeA,EAAaG,OAC5Bb,EAAiC,KAAjBU,EAAsB,CAAE7C,MAAO6C,GAAiB,CAAC,GACjEE,GACD,EAYG,UACE,UAACnB,EAAD,YACE,SAACE,EAAD,CACEmB,KAAK,OACLC,KAAK,eACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACrB,EAAD,CAAciB,KAAK,SAAnB,0BAGJ,SAAC7B,EAAA,EAAD,CAAeC,OAAQgB,MAG5B,C","sources":["Api/fetchApi.js","components/GalleryMovies/GalleryMoviesItem/GalleryMoviesItem.styled.jsx","components/GalleryMovies/GalleryMoviesItem/GalleryMoviesItem.jsx","components/GalleryMovies/GalleryMovies.styled.jsx","components/GalleryMovies/GalleryMovies.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = 'b36a691b07ce9c3557881351abfd0b29';\n\nexport const fetchTrendingMovies = async () => {\n  const response = axios.get('https://api.themoviedb.org/3/trending/all/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response;\n};\nexport const fetchMovieСast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    {\n      params: {\n        api_key: KEY,\n      },\n    }\n  );\n  return response;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    {\n      params: {\n        api_key: KEY,\n        page: 1,\n      },\n    }\n  );\n  return response.data;\n};\n\nexport const OnSearchMovie = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie`,\n    {\n      params: {\n        language: 'en-US',\n        api_key: KEY,\n        page: 1,\n        query,\n      },\n    }\n  );\n  return response.data;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLinkItem = styled(NavLink)`\n  & img {\n    width: 350px;\n  }\n  & p {\n    margin: 0;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { NavLinkItem } from './GalleryMoviesItem.styled';\nconst GalleryMoviesItem = ({ trendingMoviesUrl, trendingMoviesID, title }) => {\n  const baseUrl = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n  return (\n    <NavLinkItem to={`/movies/${trendingMoviesID}`} state={{ from: location }}>\n      <img src={baseUrl + trendingMoviesUrl} alt=\"\" />\n      <p>{title}</p>\n    </NavLinkItem>\n  );\n};\n\nexport default GalleryMoviesItem;\n","import styled from 'styled-components';\n\nexport const GalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 20px;\n  row-gap: 10px;\n`;\nexport const TrendingMoviesTitle = styled.h1`\n  display: flex;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  justify-content: center;\n`;\n","import GalleryMoviesItem from './GalleryMoviesItem';\nimport { GalleryList, TrendingMoviesTitle } from './GalleryMovies.styled';\n\nconst GalleryMovies = ({ movies, trendingMovies = null }) => {\n  return (\n    <>\n      {trendingMovies && (\n        <TrendingMoviesTitle>{trendingMovies}</TrendingMoviesTitle>\n      )}\n      {movies.length > 0 && (\n        <GalleryList>\n          {movies.map(({ poster_path, id, title }) => {\n            return (\n              title && (\n                <li key={id}>\n                  <GalleryMoviesItem\n                    trendingMoviesUrl={poster_path}\n                    trendingMoviesID={id}\n                    title={title}\n                  />\n                </li>\n              )\n            );\n          })}\n        </GalleryList>\n      )}\n    </>\n  );\n};\n\nexport default GalleryMovies;\nGalleryMovies.defaultProps = {\n  movies: [],\n};\n","import { Form, Field } from 'formik';\nimport styled from 'styled-components';\nexport const FormMovies = styled(Form)`\n  display: flex;\n  width: 500px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 5px;\n`;\nexport const FieldMovies = styled(Field)`\n  display: flex;\n  width: 100%;\n`;\nexport const SearchButton = styled.button`\n  margin-left: 5px;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { OnSearchMovie } from 'Api/fetchApi';\nimport { Formik } from 'formik';\nimport { FormMovies, FieldMovies, SearchButton } from './Movies.styled';\nimport GalleryMovies from 'components/GalleryMovies';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [fetchedMovies, setFetchedMovies] = useState([]);\n  const actualQuery = searchParams.get('query') ?? '';\n  const handleSabmit = ({ searchMovies }, { resetForm }) => {\n    searchMovies = searchMovies.trim();\n    setSearchParams(searchMovies !== '' ? { query: searchMovies } : {});\n    resetForm();\n  };\n  useEffect(() => {\n    if (actualQuery === '') {\n      return;\n    }\n    OnSearchMovie(actualQuery).then(({ results }) => {\n      setFetchedMovies(results);\n    });\n  }, [actualQuery]);\n\n  return (\n    <main>\n      <Formik initialValues={{ searchMovies: '' }} onSubmit={handleSabmit}>\n        <FormMovies>\n          <FieldMovies\n            type=\"text\"\n            name=\"searchMovies\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search Movies\"\n          />\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </FormMovies>\n      </Formik>\n      <GalleryMovies movies={fetchedMovies} />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","fetchTrendingMovies","response","axios","params","api_key","fetchMovieDetails","movieId","fetchMovieСast","fetchMovieReviews","page","data","OnSearchMovie","query","language","NavLinkItem","styled","NavLink","trendingMoviesUrl","trendingMoviesID","title","location","useLocation","to","state","from","src","alt","GalleryList","TrendingMoviesTitle","p","theme","space","GalleryMovies","movies","trendingMovies","length","map","poster_path","id","defaultProps","FormMovies","Form","FieldMovies","Field","SearchButton","useSearchParams","searchParams","setSearchParams","useState","fetchedMovies","setFetchedMovies","actualQuery","get","useEffect","then","results","initialValues","searchMovies","onSubmit","resetForm","trim","type","name","autoComplete","autoFocus","placeholder"],"sourceRoot":""}